name: pkgsrc Libero GNU/Linux

on:
  workflow_dispatch:

jobs:
  build:
    name: Build pkgsrc (${{ matrix.category }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        category:
          - archivers
          - audio
          - benchmarks
          - cad
          - chat
          - converters
          - databases
          - devel
          - editors
          - emulators
          - fonts
          - games
          - geography
          - graphics
          - ham
          - lang
          - mail
          - math
          - misc
          - multimedia
          - net
          - news
          - pkgtools
          - print
          - security
          - shells
          - sysutils
          - textproc
          - time
          - www
          - x11

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build essentials and multilib for i386
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            gcc-multilib \
            g++-multilib \
            make \
            bmake \
            git \
            curl \
            pkg-config \
            libssl-dev:i386 \
            zlib1g-dev:i386 \
            libbz2-dev:i386 \
            libc6-dev-i386 \
            ca-certificates \
            wget \
            tar \
            bash \
            ccache \
            rsync \
            nodejs \
            npm

      - name: Download pkgsrc 2025Q3
        run: |
          wget https://cdn.netbsd.org/pub/pkgsrc/pkgsrc-2025Q3/pkgsrc-2025Q3.tar.gz
          sudo tar -xzf pkgsrc-2025Q3.tar.gz -C /usr

      - name: Bootstrap pkgsrc into /usr/pkg
        run: |
          cd /usr/pkgsrc/bootstrap
          sudo ./bootstrap --abi 32 --prefer-pkgsrc yes --compiler gcc --prefix=/usr/pkg
          echo "/usr/pkg/bin" >> $GITHUB_PATH
          echo "/usr/pkg/sbin" >> $GITHUB_PATH

      - name: Install pbulk
        run: |
          cd /usr/pkgsrc/pkgtools/pbulk
          sudo /usr/pkg/bin/bmake install

      - name: Configure pbulk
        run: |
          sudo mkdir -p /etc/pbulk
          sudo tee /etc/pbulk/pbulk.conf << 'EOF'
          # pbulk configuration
          bulkbuild=/usr/pkg/bin/bulkbuild
          pkgsrc=/usr/pkgsrc
          pkgdb=/usr/pkg/pkgdb
          packages=/usr/pkg/packages
          prefix=/usr/pkg
          varbase=/var
          AWK=/usr/pkg/bin/nawk
          make=/usr/pkg/bin/bmake
          JOBS=$(nproc)
          KEEP_GOING=yes
          LOGFILE=/tmp/pbulk.log
          EOF

      - name: Configure mk.conf for multilib and tuning
        run: |
          MKCONF="/usr/pkg/etc/mk.conf"
          sudo mkdir -p "$(dirname "$MKCONF")"
          sudo tee -a "$MKCONF" << 'EOF'
          # Use gcc as compiler
          PKGSRC_COMPILER= gcc

          # Add multilib / 32-bit-specific flags
          CFLAGS+=      -m32 -march=i586 -mtune=i586
          CPPFLAGS+=    -m32 -march=i586 -mtune=i586
          CXXFLAGS+=    -m32 -march=i586 -mtune=i586
          LDFLAGS+=     -m32 -march=i586 -mtune=i586

          AWK=/usr/pkg/bin/nawk

          # Force ABI and machine arch
          ABI=32
          MACHINE_ARCH= i386

          # Prefer pkgsrc-built tools
          PREFER_PKGSRC= yes

          # Bulk build settings
          WRKOBJDIR= /tmp/pkgsrc-build
          DISTDIR= /tmp/pkgsrc-distfiles
          PACKAGES= /usr/pkg/packages

          EOF

      - name: Install nawk
        run: |
          cd /usr/pkgsrc/lang/nawk
          sudo /usr/pkg/bin/bmake install

      - name: Create work directories
        run: |
          sudo mkdir -p /tmp/pkgsrc-build /tmp/pkgsrc-distfiles
          sudo chmod 1777 /tmp/pkgsrc-build /tmp/pkgsrc-distfiles

      - name: Build category with pbulk
        run: |
          cd /usr/pkgsrc
          sudo /usr/pkg/bin/bulkbuild -c /etc/pbulk/pbulk.conf /usr/pkgsrc/${{ matrix.category }}/*

      - name: Collect built packages
        run: |
          mkdir -p /tmp/artifacts/${{ matrix.category }}
          sudo rsync -av /usr/pkg/packages/ /tmp/artifacts/${{ matrix.category }}/ || true
          du -sh /tmp/artifacts/${{ matrix.category }}

      - name: Upload artifacts to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: pkgsrc-${{ matrix.category }}
          path: /tmp/artifacts/${{ matrix.category }}
